import logging
import os
from telegram import Update
from telegram.ext import Updater, MessageHandler, Filters, CallbackContext

# === –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# === –°–ø–∏—Å–æ–∫ ID —Ç–µ–º, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –±–æ—Ç —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–µ-–∞–¥–º–∏–Ω–æ–≤ ===
BLOCKED_THREAD_IDS = [
    14,  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID —Ç–µ–º
    9876543210
]

# === –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ===
def welcome(update: Update, context: CallbackContext):
    for member in update.message.new_chat_members:
        update.message.reply_text(
            f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {member.full_name}!\n\n"
            "üìú –ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞:\n"
            "1. –ù–µ —Å–ø–∞–º–∏—Ç—å\n"
            "2. –£–≤–∞–∂–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
            "3. –°–æ–±–ª—é–¥–∞—Ç—å —Ç–µ–º—É –æ–±—â–µ–Ω–∏—è\n"
        )

# === –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–µ–º–∞—Ö ===
def block_topics(update: Update, context: CallbackContext):
    msg = update.message
    if not msg:
        return

    thread_id = getattr(msg, "message_thread_id", None)
    if not thread_id:
        return  # —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ —Ç–µ–º–∞ —Ñ–æ—Ä—É–º–∞

    user_id = update.effective_user.id
    admins = [admin.user.id for admin in context.bot.get_chat_administrators(update.effective_chat.id)]

    if user_id not in admins and thread_id in BLOCKED_THREAD_IDS:
        try:
            msg.delete()
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ —Ç–µ–º–µ {thread_id}.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# === –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ö—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ ID —Ç–µ–º—ã ===
def debug_thread_id(update: Update, context: CallbackContext):
    msg = update.message
    if not msg:
        return

    thread_id = getattr(msg, "message_thread_id", None)
    if thread_id:
        msg.reply_text(f"ID —ç—Ç–æ–π —Ç–µ–º—ã: {thread_id}")
    else:
        msg.reply_text("–≠—Ç–æ –Ω–µ —Ç–µ–º–∞ —Ñ–æ—Ä—É–º–∞.")

# === –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
def main():
    token = os.getenv("TELEGRAM_TOKEN")
    if not token:
        raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")

    updater = Updater(token, use_context=True)
    dp = updater.dispatcher

    # –•—ç–Ω–¥–ª–µ—Ä—ã
    dp.add_handler(MessageHandler(Filters.status_update.new_chat_members, welcome))
    dp.add_handler(MessageHandler(Filters.all, block_topics))

    # –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ö—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —Ç–µ–º—ã
    dp.add_handler(MessageHandler(Filters.all, debug_thread_id))

    # –ó–∞–ø—É—Å–∫
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
